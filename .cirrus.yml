
env:
  CACHIX_AUTH_TOKEN: ENCRYPTED[49049427742875d9a675cd5f545a8618efaf30387016eec43bf52b4de63539c6f9f63ab3d6d8ee2f751eeaeab5f6bf99]
  CIRRUS_SHELL: "/bin/bash"
  USER: "root"
  HOME: "/root"
  PATH: "/nix/var/nix/profiles/default/bin:/nix/var/nix/profiles/per-user/$USER/profile/bin:$PATH"

linux_amd64_task:
  name: Build Linux amd64
  timeout_in: 120m

  compute_engine_instance:
    image_project: cirrus-images
    image: family/docker-kvm
    platform: linux
    architecture: amd64
    cpu: 8
    memory: 12G
    disk: 200
    nested_virtualization: true

  # container:
  #   # Defined in https://github.com/nix-community/docker-nixpkgs
  #   image: nixpkgs/cachix-flakes:nixos-22.11
  #   # image: ubuntu:20.04
  #   cpu: 8
  #   memory: 8G

  prepare_container_env_script:
  - apt update
  - apt -y install sudo jq curl xz-utils openssh-server
  install_nix_script: ./.ci/install-nix.sh
  prepare_nix_env_script:
  - nix-env -iA cachix -f https://cachix.org/api/v1/install
  # TODO pin or something
  - nix-channel --add https://nixos.org/channels/nixpkgs-unstable
  - nix-channel --update
  - nix-env -iA nixpkgs.git
  - nix-env -iA nixpkgs.jq
  prepare_cachix_script:
  - echo $CACHIX_AUTH_TOKEN | cachix authtoken --stdin
  - cachix use nix-community
  - cachix use mic92
  - cachix use nrdxp
  - cachix use truelecter
  # cachix_watch_background_script: while true; do cachix watch-store truelecter || true; done

  build_script:
  - git config --global --add safe.directory "$(pwd)"
  # - until cachix watch-exec nix -- build --keep-going -vv '.#nixosConfigurations.nas.config.system.build.toplevel'; do echo removing /homeless-shelter..; rm -rf /homeless-shelter; nix-store --verify --repair --check-contents; echo retrying...; done
  # - until nix build --keep-going -vv '.#nixosConfigurations.nas.config.system.build.toplevel'; do echo removing /homeless-shelter..; rm -rf /homeless-shelter; echo retrying...; done
  # - nix-store --verify --repair --check-contents
  - until nix build -vv '.#nixosConfigurations.nas.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push truelecter; do echo removing /homeless-shelter..; rm -rf /homeless-shelter; rm -rf /var/empty; mkdir -p /var/empty; nix-store --verify --repair --check-contents; echo retrying...; done
  # - sleep 60

# linux_aarch64_task:
#   name: Build Linux aarch64
#   # Use the maximum timeout. Needed when rebuilding packages on a channel update.
#   timeout_in: 120m

#   arm_container:
#     # Defined in https://github.com/nix-community/docker-nixpkgs
#     # image: nixpkgs/cachix-flakes:nixos-22.05
#     image: ubuntu:20.04
#     cpu: 8
#     memory: 12G

#   prepare_container_env_script:
#   - apt update
#   - apt -y install sudo jq curl xz-utils openssh-server
#   # required for sshd.conf-validated
#   - mkdir -p /var/empty
#   install_nix_script: ./.ci/install-nix.sh
#   prepare_nix_env_script:
#   - nix-env -iA cachix -f https://cachix.org/api/v1/install
#   # TODO pin or something
#   - nix-channel --add https://nixos.org/channels/nixpkgs-unstable
#   - nix-channel --update
#   - nix-env -iA nixpkgs.git
#   prepare_cachix_script:
#   - echo $CACHIX_AUTH_TOKEN | cachix authtoken --stdin
#   - cachix use nix-community
#   - cachix use mic92
#   - cachix use nrdxp
#   - cachix use truelecter

#   build_script:
#   - git config --global --add safe.directory "$(pwd)"
#   - until nix build -vv '.#nixosConfigurations.octoprint.config.system.build.toplevel' --json | jq -r '.[].outputs | to_entries[].value' | cachix push truelecter; do echo removing /homeless-shelter..; rm -rf /homeless-shelter; rm -rf /var/empty; mkdir -p /var/empty; nix-store --verify --repair --check-contents; echo retrying...; done
