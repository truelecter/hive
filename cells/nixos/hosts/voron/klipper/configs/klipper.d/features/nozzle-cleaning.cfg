[gcode_macro CLEAN_NOZZLE]
# These parameters define your filament purging. The retract variable is used to retract right after purging to prevent unnecessary
# oozing. Some filament are particularly oozy and may continue to ooze out of the nozzle for a second or two after retracting. The
# ooze dwell variable makes allowance for this. Update as necessary. If you decided to not enable purge, you can ignore this section.
variable_purge_len: 25
variable_purge_spd: 150
variable_purge_temp_min: 200
variable_purge_ret: 2
variable_ooze_dwell: 2

# These parameters define your scrubbing, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary. Wipe
# direction is randomized based off whether the left or right bucket is randomly selected in the purge & scrubbing routine.
variable_clearance_z: 15
variable_wipe_qty: 8
variable_prep_spd_xy: 19500
variable_prep_spd_z: 1500
variable_wipe_spd_xy: 10000

# These parameters define the size of the brush. Update as necessary. A visual reference is provided below. Note that orientation of
# parameters remain the same whether bucket is at rear or front.
#
#  brush_start (x,y) _________________________________________
#                   |#################|  ↑                    |
#                   |#################| brush_depth           |
#                   |_________________|  ↓                    |
#                   |←  brush_width  →                        |
#                   |                                         |
#                   |                      Purge Bucket       |
#                   |_________________________________________|
variable_brush_top: 1
variable_brush_start_x: 235
variable_brush_start_y: -25
variable_brush_width: 25
variable_purge_x: 250
variable_purge_y: -50

variable_cleaning_wiggle: 2

gcode:
  {% if "xyz" in printer.toolhead.homed_axes %}
     # First, check if the axes are homed.
    {% set enable_purge = params.PURGE|default(0)|int%}

    _STATUS_CLEANING
    SAVE_GCODE_STATE NAME=clean_nozzle
    ## Set to absolute positioning.
    G90

    ## Check if user enabled purge option or not.
    {% if enable_purge %}
      ### Raise Z for travel.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}

      G1 X{purge_x} Y{purge_y} F{prep_spd_xy}

      ### Perform purge if the temp is up to min temp.
      ### Small retract after purging to minimize any persistent oozing at 5x purge_spd.
      ### G4 dwell is in milliseconds, hence * 1000 in formula.
      {% if printer.extruder.temperature >= purge_temp_min %}
        M83
        G1 E{purge_len} F{purge_spd}
        G1 E-{purge_ret} F{purge_spd * 5}
        G4 P{ooze_dwell * 1000}
        G92 E0
      {% else %}
        #### raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
        { action_raise_error("Temp too low for purge!") }
        M117 Please home first!
      {% endif %}
    {% endif %}

    ## Position for wipe. Either left or right of brush based off bucket_pos to avoid unnecessary travel.
    G1 Z{brush_top + clearance_z} F{prep_spd_z}
    G1 X{brush_start_x} Y{brush_start_y} F{prep_spd_xy}

    ## Move nozzle down into brush.
    G1 Z{brush_top} F{prep_spd_z}

    ## Wipe
    {% for wipes in range(1, (wipe_qty + 1)) %}
      G1 X{brush_start_x + brush_width} Y{brush_start_y - cleaning_wiggle} F{wipe_spd_xy}
      G1 X{brush_start_x} Y{brush_start_y} F{wipe_spd_xy}
    {% endfor %}

    ## Clear from area.
    M117 Cleaned!
    G1 Z{brush_top + clearance_z} F{prep_spd_z}

    ## Restore the gcode state to how it was before the macro.
    RESTORE_GCODE_STATE NAME=clean_nozzle

    _STATUS_READY
  {% else %}
    ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
    { action_raise_error("Axes not homed!") }
    M117 Please home first!
  {% endif %}
